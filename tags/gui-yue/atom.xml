<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: 规约 | Hedley]]></title>
  <link href="http://hedleyyan.github.io/tags/gui-yue/atom.xml" rel="self"/>
  <link href="http://hedleyyan.github.io/"/>
  <updated>2015-05-17T00:24:06+08:00</updated>
  <id>http://hedleyyan.github.io/</id>
  <author>
    <name><![CDATA[dL]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A Glossary of Name Reuse]]></title>
    <link href="http://hedleyyan.github.io/blog/2015/05/16/a-glossary-of-name-reuse/"/>
    <updated>2015-05-16T17:07:57+08:00</updated>
    <id>http://hedleyyan.github.io/blog/2015/05/16/a-glossary-of-name-reuse</id>
    <content type="html"><![CDATA[<h2>关于</h2>

<p>此文大概就是《Java Puzzlers》中Classier Pazzlers一节的简单翻译和整理，粗略总结了Java有关<strong>命名重复</strong>的场景和代码示例。</p>

<!--more-->


<h2>Overriding</h2>

<p><blockquote><p>An instance method overrides all accessible instance methods with the same signature in superclasses.</p><footer><strong>JLS 8.4.8.1</strong></footer></blockquote>
重写的规范定义两个要点
*  必须是实例方法（instance methods）。NOT 静态方法
*  必须是同样签名（signature）。包括参数、返回类型、类型声明
&#8220;` java overriding
    class Base {
        public void f() { }
    }</p>

<pre><code>class Derived extends Base {
    public void f() { } // overrrides Base.f()
}
</code></pre>

<p>&#8220;`</p>

<h2>Overloading</h2>

<h2>Hiding</h2>

<h2>Shadowing</h2>

<h2>Obscuring</h2>

<h2>常见陷阱</h2>

<h2>总结</h2>

<h2>引用</h2>
]]></content>
  </entry>
  
</feed>
